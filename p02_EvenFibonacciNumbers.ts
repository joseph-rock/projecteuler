/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

function nextFibonacciNum(nums: number[]) {
  return nums[nums.length - 1] + nums[nums.length - 2];
}

function fibonacciArray() {
  const fibonacciNums: number[] = [1, 2];
  while (nextFibonacciNum(fibonacciNums) < 4_000_000) {
    fibonacciNums.push(nextFibonacciNum(fibonacciNums));
  }
  return fibonacciNums;
}

const fibonacciNums: number[] = fibonacciArray();
const evenOnly: number[] = fibonacciNums.filter((n) => n % 2 == 0);
const sumOfFibonacciNums: number = evenOnly.reduce((acc, obj) => acc + obj);
console.log(sumOfFibonacciNums);
